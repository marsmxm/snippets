x <- 1
x
x
if (x < 3) {}
if (x < 3) { y <- 2 } else { y <- 3}
y
x <- c("a", "b", "c", "d")
for (letter in x) {print(letter)}
install.packages("learnr")
add2(1,2)
add2 <- function (x, y) {
x + y
}
add2(1,2)
formals(add2)
search()
make.power <- function (n) {
function (x) {
x ^ n
}
}
cube <- make.power(3)
cube (2)
environment(cube)
ls(environment(cube))
ls
s1 <- "fuck him"
s2 <- "hfuckim"
install.packages("stringr")
library("stringr")
str_o
larsub<-function(x) {
a<-x[1]
b<-x[2]
# get all forward substrings of a
for(n in seq(1,nchar(a)))
{
sb<-unique(combn(strsplit(a, "")[[1]],n, FUN=paste, collapse=""))
if(length(unlist(str_extract_all(b,sb)))==0){
r<-prior
return(r)
}
prior<-unlist(str_extract_all(b,sb))
}
}
c1<-larsub(c('ABCD','BCDE'))
c1
install.packages("swirl")
library("swirl")
swirl()
gwtwd()
getwd()
help()
swirl()
v <- c(0.5, 55, -10, 6)
?c
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "sam")
my_name
paste(my_name, collapse = " ")
paste(
"Hello", "world!", sep = " "
)
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-'")
paste(LETTERS, 1:4, sep = "-")
x<-c(44,na,5,na)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar",
| "norf")
names(vect2) <- c("foo", "bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matric <- my_vector
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
ls()
x<-9
ls()
list.files()
dir()
?list.files
args(list.files)
help()
h
bye()
library("swirl")
swirl()
TRUE == FALSE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
!(5 ==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
getcw()
getwd()
bye()
swirl()
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename(
"mytest.R", "mytest2.R"
)
file.copy("mytest2.R", "cytest3.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd(old.dir)
getwd()
list.files
list.files()
file.remove("testdir/")
?file.remove
file.remove("testdir/*")
?unlink
unlink("testdir", recursive = TRUE)
list.files()
quit()
library("swirl")
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
setwd("~/learn/snippets/r-prog/Assignment1")
